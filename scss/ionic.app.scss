/*
To customize the look and feel of Ionic, you can override the variables
in ionic's _variables.scss file.

For example, you might change some of the default colors:
For example, you might change some of the default colors:

$light:                           #fff !default;
$stable:                          #f8f8f8 !default;
$positive:                        #387ef5 !default;
$calm:                            #11c1f3 !default;
$balanced:                        #33cd5f !default;
$energized:                       #ffc900 !default;
$assertive:                       #ef473a !default;
$dark:                            #444 !default;
$royal:                           #886aea !default;
 */
$bgcolor:                         #78909C !default;
$bgitemcolor:                     #37474F !default;
$light:                           #fff !default;
$stable:                          #f8f8f8 !default;
$positive:                        #387ef5 !default;
$calm:                            #11c1f3 !default;
$balanced:                        #33cd5f !default;
$energized:                       #ffc900 !default;
$assertive:                       #ef473a !default;
$royal:                           #886aea !default;
$dark:                            #444 !default;
$shadow:                          2px 2px 5px 0px #000 !default;
// Colors
// -------------------------------

// Base
// -------------------------------

/*$font-family-sans-serif:          "Helvetica Neue", "Roboto", "Segoe UI", sans-serif !default;*/
/*$font-family-light-sans-serif:    "HelveticaNeue-Light", "Roboto-Light", "Segoe UI-Light", sans-serif-light !default;*/
/*$font-family-serif:               serif !default;*/
/*$font-family-monospace:           monospace !default;*/

/*$font-family-base:                $font-family-sans-serif !default;*/
/*$font-size-base:                  14px !default;*/
/*$font-size-large:                 18px !default;*/
/*$font-size-small:                 11px !default;*/

/*$line-height-base:                1.428571429 !default; // 20/14*/
/*$line-height-computed:            floor($font-size-base * $line-height-base) !default; // ~20px*/
/*$line-height-large:               1.33 !default;*/
/*$line-height-small:               1.5 !default;*/

/*$headings-font-family:            $font-family-base !default;*/
/*$headings-font-weight:            500 !default;*/
/*$headings-line-height:            1.2 !default;*/

$base-background-color:             #fff !default;
/*$base-color:                      #000 !default;*/

/*$link-color:                      $positive !default;*/
/*$link-hover-color:                darken($link-color, 15%) !default;*/

/*$content-padding:                 10px !default;*/

/*$padding-base-vertical:           6px !default;*/
/*$padding-base-horizontal:         12px !default;*/

/*$padding-large-vertical:          10px !default;*/
/*$padding-large-horizontal:        16px !default;*/

/*$padding-small-vertical:          5px !default;*/
/*$padding-small-horizontal:        10px !default;*/

/*$border-radius-base:              4px !default;*/
/*$border-radius-large:             6px !default;*/
/*$border-radius-small:             3px !default;*/




// The path for our ionicons font files, relative to the built CSS in www/css
$ionicons-font-path: "../lib/ionic/fonts" !default;

// Include all of Ionic
@import "www/lib/ionic/scss/ionic";

.animate-show.ng-hide-add, .animate-show.ng-hide-remove {
    transition: all linear 1s;
}

.animate-show.ng-hide {
    line-height: 0;
    opacity: 0;
    padding: 0 10px;
}
.animate-enter, 
.animate-leave
{ 
    -webkit-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -moz-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -ms-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -o-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    position: relative;
    display: block;
} 

.animate-enter.animate-enter-active, 
.animate-leave {
    opacity: 1;
    top: 0;
    height: 30px;
}

.animate-leave.animate-leave-active,
.animate-enter {
    opacity: 0;
    top: -50px;
    height: 0px;
}




/* COLORS ----------------------------*/

// the main/primary color
$main-color: #E40A5D !default;
// button colors
$button-text-color: #f1f1f1;
$button-box-shadow: 0 0 4px rgba(0,0,0,.14),0 4px 8px rgba(0,0,0,.28) !default;
// labels colors
$label-text-color: rgba(255, 255, 255, 0.8) !default;
// labels background
$label-background-color: rgba(0,0,0, .4);
/* EFFECTS ---------------------------*/

// which effects must be made available in the css
$effects-zoomin: true !default;
$effects-slidein: true !default;
$effects-fountain: true !default;

/* SPEEDS ----------------------------*/

// the speed of the inflation of each button after hovering on the main button
$delay-staggering-inflate: 0.1s !default;
// when hovering on the main button the child buttons slide into view
$slide-speed: .5s !default;
// the labels disappear at this speed on mouse out
$label-hover-off: .5s !default;
// the labels appear at this speed on mouse over
$label-hover-on: .3s !default;

/* SIZES -----------------------------*/

// main button diameter
$main-button-size: 40px !default;
// main button diameter
$child_button_size: 30px !default;
// the distance of the main button from the closest corners of the screen
$border-distance: 0px !default;
// font-size for the icons
$icons-font-size: 18px !default;
// font-size for labels
$labels-font-size: 14px !default;
// font-weight for labels
$labels-font-weight: normal !default;
// top & bottom padding for the labels
$labels-padding-vertical: 0px !default;
// left & right padding for the labels
$labels-padding-horizontal: 0px !default;

/* SPACING ---------------------------*/

// space between buttons
$button-space: 70px !default;
// space between button and label
$button-label-space: 70px !default;

/* OTHER VARIABLES -------------------*/

// how many child buttons does the component have
$number-of-child-buttons: 4 !default;


@import "www/lib/ng-material-floating-button/mfb/src/mfb";







// Scales for responsive SVG containers
$ct-scales: ((1), (15/16), (8/9), (5/6), (4/5), (3/4), (2/3), (5/8), (1/1.618), (3/5), (9/16), (8/15), (1/2), (2/5), (3/8), (1/3), (1/4)) !default;
$ct-scales-names: (ct-square, ct-minor-second, ct-major-second, ct-minor-third, ct-major-third, ct-perfect-fourth, ct-perfect-fifth, ct-minor-sixth, ct-golden-section, ct-major-sixth, ct-minor-seventh, ct-major-seventh, ct-octave, ct-major-tenth, ct-major-eleventh, ct-major-twelfth, ct-double-octave) !default;

// Class names to be used when generating CSS
$ct-class-chart: ct-chart !default;
$ct-class-chart-line: ct-chart-line !default;
$ct-class-chart-bar: ct-chart-bar !default;
$ct-class-horizontal-bars: ct-horizontal-bars !default;
$ct-class-chart-pie: ct-chart-pie !default;
$ct-class-chart-donut: ct-chart-donut !default;
$ct-class-label: ct-label !default;
$ct-class-series: ct-series !default;
$ct-class-line: ct-line !default;
$ct-class-point: ct-point !default;
$ct-class-area: ct-area !default;
$ct-class-bar: ct-bar !default;
$ct-class-slice-pie: ct-slice-pie !default;
$ct-class-slice-donut: ct-slice-donut !default;
$ct-class-grid: ct-grid !default;
$ct-class-vertical: ct-vertical !default;
$ct-class-horizontal: ct-horizontal !default;
$ct-class-start: ct-start !default;
$ct-class-end: ct-end !default;

// Container ratio
$ct-container-ratio: (1/1.618) !default;

// Text styles for labels
$ct-text-color: rgba(0, 0, 0, 0.4) !default;
$ct-text-size: 0.75rem !default;
$ct-text-align: flex-start !default;
$ct-text-justify: flex-start !default;
$ct-text-line-height: 1;

// Grid styles
$ct-grid-color: rgba(0, 0, 0, 0.2) !default;
$ct-grid-dasharray: 2px !default;
$ct-grid-width: 2px !default;

// Line chart properties
$ct-line-width: 2px !default;
$ct-line-dasharray: false !default;
$ct-point-size: 6px !default;
// Line chart point, can be either round or square
$ct-point-shape: round !default;
// Area fill transparency between 0 and 1
$ct-area-opacity: 0.4 !default;

// Bar chart bar width
$ct-bar-width: 10px !default;

// Donut width (If donut width is to big it can cause issues where the shape gets distorted)
$ct-donut-width: 60px !default;

// If set to true it will include the default classes and generate CSS output. If you're planning to use the mixins you
// should set this property to false
$ct-include-classes: true !default;

// If this is set to true the CSS will contain colored series. You can extend or change the color with the
// properties below
$ct-include-colored-series: $ct-include-classes !default;

// If set to true this will include all responsive container variations using the scales defined at the top of the script
$ct-include-alternative-responsive-containers: $ct-include-classes !default;

// Series names and colors. This can be extended or customized as desired. Just add more series and colors.
$ct-series-names: (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) !default;
$ct-series-colors: (
#E53935,
#3949AB,
#43A047,
#FDD835,
#D81B60,
#8E24AA,
#0544d3,
#6b0392,
#f05b4f,
#dda458,
#eacf7d,
#86797d,
#b2c326,
#6188e2,
#a748ca
) !default;


@import "www/lib/chartist/dist/scss/chartist";


$ct-class-legend: ct-legend !default;

@for $i from 0 to length($ct-series-names) {
    ##{$ct-class-legend}-#{nth($ct-series-names, $i + 1)} {
        $color: nth($ct-series-colors, $i + 1);
        fill:$color

    }

}



